// Full Documentation - https://www.turbo360.co/docs
const turbo = require('turbo360')({site_id: process.env.TURBO_APP_ID})
const vertex = require('vertex360')({site_id: process.env.TURBO_APP_ID})
const router = vertex.router()
const controllers = require('../controllers')

router.get('/:resource', (req, res) => {
	const controller = controllers[req.params.resource]
	if (controller == null){
		res.json({confirmation:'fail', message:'Invalid resource'})
		return
	}

	controller.get(req.query)
	.then(data => {
		res.json({confirmation:'success', data:data})
	})
	.catch(err => {
		res.json({confirmation:'fail', message:err.message})
	})
})

router.get('/:resource/:id', (req, res) => {
	const controller = controllers[req.params.resource]
	if (controller == null){
		res.json({confirmation:'fail', message:'Invalid resource'})
		return
	}

	controller.getById(req.params.id)
	.then(data => {
		res.json({confirmation:'success', data:data})
	})
	.catch(err => {
		res.json({confirmation:'fail', message:err.message})
	})
})

router.post('/:resource', (req, res) => {
	const controller = controllers[req.params.resource]
	if (controller == null){
		res.json({confirmation:'fail', message:'Invalid resource'})
		return
	}

	controller.post(req.body)
	.then(data => {
		res.json({confirmation:'success', data:data})
	})
	.catch(err => {
		res.json({confirmation:'fail', message:err.message})
	})
})

router.put('/:resource/:id', (req, res) => {
	const controller = controllers[req.params.resource]
	if (controller == null){
		res.json({confirmation:'fail', message:'Invalid resource'})
		return
	}

	controller.put(req.params.id, req.body)
	.then(data => {
		res.json({confirmation:'success', data:data})
	})
	.catch(err => {
		res.json({confirmation:'fail', message:err.message})
	})
})

router.delete('/:resource/:id', (req, res) => {
	const controller = controllers[req.params.resource]
	if (controller == null){
		res.json({confirmation:'fail', message:'Invalid resource'})
		return
	}

	const id = req.params.id
	controller.delete(id, null)
	.then(() => {
		res.json({confirmation:'success', data:{id:id}}) // return the ID so client side can track which entity removed
	})
	.catch(err => {
		res.json({confirmation:'fail', message:err.message})
	})
})

module.exports = router
