var prompt=require("prompt"),colors=require("colors/safe"),path=require("path"),os=require("os"),fs=require("fs"),utils=require("../utils");module.exports={showAWSPrompt:function(){return new Promise(function(r,e){var n={properties:{bucket:{},folder:{}}};prompt.message=null,prompt.start(),prompt.get(n,function(n,o){if(n)return void e(n);r(o)})})},showAWSConfigInputs:function(){return new Promise(function(r,e){var n={properties:{AWS_KEY:{description:colors.cyan("\nEnter AWS Key (text is hidden)"),hidden:!0,required:!0},AWS_SECRET:{description:colors.cyan("Enter AWS Secret (text is hidden)"),hidden:!0,required:!0},AWS_ROLE:{description:colors.cyan("Enter AWS Role"),required:!0},AWS_ACCT:{description:colors.cyan("Enter AWS Account Number"),required:!0},BUCKET:{description:colors.cyan("Enter AWS Bucket"),required:!0},AWS_REGION:{description:colors.cyan("Enter AWS Region"),required:!0}}};prompt.message=null,prompt.start(),prompt.get(n,function(n,o){if(n)return void e(n);r(o)})})},showPrompt:function(){return new Promise(function(r,e){var n={properties:{email:{description:colors.cyan("\nEmail"),required:!0},password:{description:colors.cyan("Password"),required:!0,hidden:!0}}};prompt.message=null,prompt.start(),prompt.get(n,function(n,o){if(n)return void e(n);r(o)})})},isLoggedIn:function(){var r=path.join(os.homedir(),".turbo_user");return 0!=fs.existsSync(r)},connectApp:function(){return new Promise(function(r,e){var n={properties:{siteId:{description:colors.cyan("\nEnter Site ID"),required:!0},apiKey:{description:colors.cyan("Enter Site API Key"),required:!0}}};prompt.message=null,prompt.start(),prompt.get(n,function(n,o){if(n)return void e(n);r(o)})})},currentUser:function(){return new Promise(function(r,e){var n=path.join(os.homedir(),".turbo_user");if(0==fs.existsSync(n))return void e(new Error("Please log in:\n$ turbo login"));utils.readFile(n).then(function(e){currentUser=JSON.parse(e),r(currentUser)}).catch(function(r){e(r)})})},isAuthorized:function(r,e){if(null==e)return!1;if(r.profile.id==e.id)return!0;for(var n=!1,o=0;o<r.collaborators.length;o++){if(r.collaborators[o].id==e.id){n=!0;break}}return n},awsConfig:function(){return new Promise(function(r,e){var n=path.join(os.homedir(),".turbo_aws_config");if(0==fs.existsSync(n))return void e(new Error("AWS Config not set. To set:\n$ turbo awsConfig"));utils.readFile(n).then(function(e){awsSettings=JSON.parse(e),r(awsSettings)}).catch(function(r){e(r)})})}};